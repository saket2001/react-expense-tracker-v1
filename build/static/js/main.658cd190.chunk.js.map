{"version":3,"sources":["components/ExpenseItem/ExpenseItem.js","components/Filter/FilterDiv.js","components/Chart/ChartBar.js","components/Chart/Chart.js","components/ExpenseChart/ExpenseChart.js","components/Expenses/Expense.js","components/ExpenseForm/Form.js","components/ExpenseForm/ExpenseForm.js","App.js","index.js"],"names":["ExpenseItem","props","month","date","toLocaleString","day","year","getFullYear","className","title","amount","FilterDiv","value","selected","onChange","e","onFilterChange","target","ChartBar","barHeightFill","maxValue","Math","round","style","height","label","Chart","dataPointsValue","dataPoints","map","dataPoint","maximumValue","max","ExpenseChart","chartDataPoints","expenses","expense","getMonth","Expense","useState","inputFilterYear","setFilterYear","filteredExpenses","data","filter","toString","expenseContent","length","id","Form","enteredTitle","setTitle","enteredAmount","setAmount","enteredDate","setDate","onSubmit","preventDefault","expenseData","Date","onDataArrival","alert","htmlFor","type","name","autoComplete","min","onClick","onCancelClick","ExpenseForm","flag","setFlag","random","DUMMY_DATA","App","updateExpense","prevExpenses","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.658cd190.chunk.js","sourcesContent":["import \"./ExpenseItem.css\";\r\n\r\nconst ExpenseItem = (props) => {\r\n  const month = props.date.toLocaleString(\"en-US\", { month: \"long\" });\r\n  const day = props.date.toLocaleString(\"en-US\", { day: \"2-digit\" });\r\n  const year = props.date.getFullYear();\r\n\r\n  return (\r\n    <div className=\"ExpenseItem\">\r\n      <div className=\"expense_item__info\">\r\n        <div className=\"expense_item__title\">{props.title}</div>\r\n        <div className=\"expense_item__date\">\r\n          {month} {day} {year}\r\n        </div>\r\n      </div>\r\n      <div className=\"expense_item__amount\">â‚¹ {props.amount}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExpenseItem;\r\n","import \"./Filter.css\";\r\n\r\nconst FilterDiv = (props) => {\r\n  const getFilterValue = (e) => {\r\n    props.onFilterChange(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className=\"expenses-filter\">\r\n      <div className=\"expenses-filter__control\">\r\n        <label>Filter by year</label>\r\n        <select value={props.selected} onChange={getFilterValue}>\r\n          <option value=\"2022\">2022</option>\r\n          <option value=\"2021\">2021</option>\r\n          <option value=\"2020\">2020</option>\r\n          <option value=\"2019\">2019</option>\r\n        </select>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FilterDiv;\r\n","import \"./chart.css\";\r\n\r\nconst ChartBar = (props) => {\r\n  let barHeightFill = \"0%\";\r\n\r\n  if (props.maxValue > 0) {\r\n    barHeightFill = Math.round((props.value / props.maxValue) * 100) + \"%\";\r\n  }\r\n  return (\r\n    <div className=\"chart-bar\">\r\n      <div className=\"chart-bar__inner\">\r\n        <div\r\n          className=\"chart-bar__fill\"\r\n          style={{ height: barHeightFill }}\r\n        ></div>\r\n      </div>\r\n      <div className=\"chart-bar__label\">{props.label}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChartBar;\r\n","import ChartBar from \"./ChartBar\";\r\nimport \"./chart.css\";\r\n\r\nconst Chart = (props) => {\r\n  const dataPointsValue = props.dataPoints.map((dataPoint) => dataPoint.value);\r\n  const maximumValue = Math.max(...dataPointsValue);\r\n\r\n  return (\r\n    <div className=\"chart\">\r\n      {props.dataPoints.map((dataPoint) => (\r\n        <ChartBar\r\n          key={dataPoint.label}\r\n          value={dataPoint.value}\r\n          maxValue={maximumValue}\r\n          label={dataPoint.label}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chart;\r\n","import Chart from \"../Chart/Chart\";\r\n\r\nconst ExpenseChart = (props) => {\r\n  const chartDataPoints = [\r\n    { label: \"Jan\", value: 0 },\r\n    { label: \"Feb\", value: 0 },\r\n    { label: \"Mar\", value: 0 },\r\n    { label: \"Apr\", value: 0 },\r\n    { label: \"May\", value: 0 },\r\n    { label: \"Jun\", value: 0 },\r\n    { label: \"Jul\", value: 0 },\r\n    { label: \"Aug\", value: 0 },\r\n    { label: \"Sep\", value: 0 },\r\n    { label: \"Oct\", value: 0 },\r\n    { label: \"Nov\", value: 0 },\r\n    { label: \"Dec\", value: 0 },\r\n  ];\r\n\r\n  for (const expense of props.expenses) {\r\n    const expenseMonth = expense.date.getMonth();\r\n    chartDataPoints[expenseMonth].value += expense.amount;\r\n  }\r\n\r\n  return <Chart dataPoints={chartDataPoints} />;\r\n};\r\n\r\nexport default ExpenseChart;\r\n","import { useState } from \"react\";\r\nimport ExpenseItem from \"../ExpenseItem/ExpenseItem\";\r\nimport FilterDiv from \"../Filter/FilterDiv\";\r\nimport ExpenseChart from \"../ExpenseChart/ExpenseChart\";\r\nimport \"./Expense.css\";\r\n\r\nconst Expense = (props) => {\r\n  const [inputFilterYear, setFilterYear] = useState(\"2022\");\r\n\r\n  const getFilterYear = (data) => {\r\n    setFilterYear(data);\r\n  };\r\n\r\n  const filteredExpenses = props.data.filter(\r\n    (expense) => expense.date.getFullYear().toString() === inputFilterYear\r\n  );\r\n\r\n  let expenseContent = <p>No expenses for selected year</p>;\r\n\r\n  if (filteredExpenses.length > 0) {\r\n    expenseContent = filteredExpenses.map((expense) => (\r\n      <ExpenseItem\r\n        key={expense.id}\r\n        date={expense.date}\r\n        title={expense.title}\r\n        amount={expense.amount}\r\n      />\r\n    ));\r\n  }\r\n\r\n  return (\r\n    <div className=\"expense_item_container\">\r\n      <FilterDiv selected={inputFilterYear} onFilterChange={getFilterYear} />\r\n      <ExpenseChart expenses={filteredExpenses} />\r\n      <h3>Your Expenses</h3>\r\n\r\n      {/* rendering array of data */}\r\n      {expenseContent}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Expense;\r\n","import \"./ExpenseForm.css\";\r\nimport { useState } from \"react\";\r\n\r\nconst Form = (props) => {\r\n  const [enteredTitle, setTitle] = useState(\"\");\r\n  const [enteredAmount, setAmount] = useState(\"\");\r\n  const [enteredDate, setDate] = useState(\"\");\r\n\r\n  const inputTitleHandler = (e) => {\r\n    if (e.target.value) setTitle(e.target.value);\r\n  };\r\n  const inputNumberHandler = (e) => {\r\n    if (e.target.value) setAmount(e.target.value);\r\n  };\r\n  const inputDateHandler = (e) => {\r\n    if (e.target.value) setDate(e.target.value);\r\n  };\r\n\r\n  const GetFormData = (e) => {\r\n    e.preventDefault();\r\n\r\n    // check if all input data is entered\r\n    if (enteredTitle && enteredAmount && enteredDate) {\r\n      // making expense obj\r\n      const expenseData = {\r\n        title: enteredTitle,\r\n        amount: +enteredAmount,\r\n        date: new Date(enteredDate),\r\n      };\r\n\r\n      // sending data to parent\r\n      props.onDataArrival(expenseData);\r\n    } else alert(\"Please provide all the information asked!!\");\r\n    // clearing inputs\r\n    setTitle(\"\");\r\n    setAmount(\"\");\r\n    setDate(\"\");\r\n  };\r\n\r\n  return (\r\n    <form className=\"expense_form\" onSubmit={GetFormData}>\r\n      <div className=\"form__div\">\r\n        <label htmlFor=\"title\" className=\"label\">\r\n          Title\r\n        </label>\r\n        <input\r\n          type=\"text\"\r\n          name=\"\"\r\n          id=\"title\"\r\n          autoComplete=\"off\"\r\n          value={enteredTitle}\r\n          onChange={inputTitleHandler}\r\n        />\r\n      </div>\r\n      <div className=\"form__div\">\r\n        <label htmlFor=\"amount\" className=\"label\">\r\n          Amount\r\n        </label>\r\n        <input\r\n          type=\"number\"\r\n          min=\"0\"\r\n          id=\"amount\"\r\n          value={enteredAmount}\r\n          onChange={inputNumberHandler}\r\n        />\r\n      </div>\r\n      <div className=\"form__div\">\r\n        <label htmlFor=\"date\" className=\"label\">\r\n          Date\r\n        </label>\r\n        <input\r\n          type=\"date\"\r\n          id=\"date\"\r\n          value={enteredDate}\r\n          onChange={inputDateHandler}\r\n        />\r\n      </div>\r\n      <div className=\"form__div_action\">\r\n        <button className=\"btn\">Add Expense</button>\r\n        <button className=\"btn\" onClick={props.onCancelClick}>\r\n          Cancel\r\n        </button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n","import { useState } from \"react\";\r\nimport Form from \"./Form\";\r\n\r\nconst ExpenseForm = (props) => {\r\n  const [flag, setFlag] = useState(\"false\");\r\n  const getDataFromChild = (data) => {\r\n    // add custom id to data\r\n    data.id = (Math.random() * 10).toString();\r\n    // sending to app component\r\n    props.onDataArrival(data);\r\n  };\r\n\r\n  const showForm = (e) => {\r\n    setFlag(true);\r\n  };\r\n  const hideForm = (e) => {\r\n    setFlag(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"expense_form\">\r\n      {flag === true ? (\r\n        <Form onDataArrival={getDataFromChild} onCancelClick={hideForm} />\r\n      ) : (\r\n        <div className=\"form__div_action\">\r\n          <button className=\"btn\" onClick={showForm}>\r\n            Add New Expense\r\n          </button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExpenseForm;\r\n","import Expense from \"./components/Expenses/Expense\";\nimport ExpenseForm from \"./components/ExpenseForm/ExpenseForm\";\n\nimport { useState } from \"react\";\nimport ExpenseItem from \"./components/ExpenseItem/ExpenseItem\";\n\nconst DUMMY_DATA = [\n  {\n    id: \"e1\",\n    title: \"Toilet Paper\",\n    amount: 94.12,\n    date: new Date(2020, 7, 14),\n  },\n  { id: \"e2\", title: \"New TV\", amount: 799.49, date: new Date(2021, 2, 12) },\n  {\n    id: \"e3\",\n    title: \"Car Insurance\",\n    amount: 294.67,\n    date: new Date(2021, 2, 28),\n  },\n  {\n    id: \"e4\",\n    title: \"New Desk (Wooden)\",\n    amount: 450,\n    date: new Date(2021, 5, 12),\n  },\n];\n\nfunction App() {\n  const [expenses, updateExpense] = useState(DUMMY_DATA);\n\n  const getData = (data) => {\n    // adding to list\n    updateExpense((prevExpenses) => [data, ...prevExpenses]);\n  };\n\n  return (\n    <div className=\"container\">\n      <ExpenseForm onDataArrival={getData} />\n      <Expense data={expenses} />\n    </div>\n  );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}